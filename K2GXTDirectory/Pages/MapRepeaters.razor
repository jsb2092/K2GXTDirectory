@page "/mapRepeaters"
@using K2GXT_Directory_2.Data
@using BlazorLeaflet
@using BlazorLeaflet.Models
@using System.Drawing
@using BlazorLeaflet.Models.Events

@inject RepeaterDirectoryService RepeaterService
@inject IJSRuntime jsRuntime
@using BrowserInterop.Extensions
@using BrowserInterop.Geolocation


@if (repeaters == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div id="bigRepeaterMap">
        <LeafletMap Map="_map"/>
    </div>

}
@code {
    private Repeater[] repeaters;
    private Map _map;
    private WindowNavigatorGeolocation geolocationWrapper;

    protected override async Task OnInitializedAsync()
    {
        GeolocationPosition currentPosition = new GeolocationPosition();
        try
        {
            var window = await jsRuntime.Window();
            var navigator = await window.Navigator();
            geolocationWrapper = navigator.Geolocation;
            currentPosition = (await geolocationWrapper.GetCurrentPosition(new PositionOptions()
            {
                EnableHighAccuracy = true,
                MaximumAgeTimeSpan = TimeSpan.FromHours(1),
                TimeoutTimeSpan = TimeSpan.FromMinutes(1)
            })).Location;
        }
        catch
        {
        }
        var currentPos = new LatLng((float)38.56588962746834, (float)-97.84486619343919);
        var zoom = 5;
        if (currentPosition?.Coords != null)
        {
            currentPos = new LatLng((float)currentPosition.Coords.Latitude, (float)currentPosition.Coords.Longitude);
            zoom = 8;
        }
        _map = new Map(jsRuntime)
        {
            
            Center = currentPos,
            Zoom = zoom
        };
        repeaters = await RepeaterService.GetRepeaterListByLocation(currentPos.Lat, currentPos.Lng, 50);
        _map.OnInitialized += () =>
        {
            _map.AddLayer(new TileLayer
            {
                UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            });
            
            foreach (var repeater in repeaters)
            {
                
                if (repeater.Location.coordinates[1] != null)
                {
                    var loc = new LatLng((float)repeater.Location.coordinates[1].Value, (float)repeater.Location.coordinates[0].Value);

                    bool hasCoverage = repeater.CoverageRadiusKM != null && repeater.CoverageRadiusKM > 0;


                    if (hasCoverage)
                    {
                        _map.AddLayer(new Circle
                        {
                            Position = loc,
    // radius in m
                            Radius = repeater.CoverageRadiusKM.Value * 1000f,
                            Fill = true,
                            FillColor = Color.Blue,
                            FillOpacity = .10
                        });
                    }
                    _map.AddLayer(new Marker(loc)
                    {
                        IsInteractive = true,
                        ZIndexOffset = 100,
                        Position = loc,
                        Icon = new Icon()
                        {
                            Url = "/images/marker-icon.png",
                            Anchor = new Point(7, 25),
                            TooltipAnchor = new Point(0, 0)

                        },
                        
                        Title = repeater.CallSign
                    });
                 
                }

            }
        };

    }

}

